# Upstreams para os serviços
upstream frontend {
    server frontend:3000;
}

upstream backend {
    server backend:4000;
}

# Configuração do servidor principal
server {
    listen 80;
    server_name localhost;
    
    # Logs específicos
    access_log /var/log/nginx/juristec.access.log;
    error_log /var/log/nginx/juristec.error.log;

    # Configurações para WebSocket
    location /socket.io/ {
        proxy_pass http://backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # Timeouts para WebSocket
        proxy_connect_timeout 7d;
        proxy_send_timeout 7d;
        proxy_read_timeout 7d;
    }

    # API Routes específicas - proxya para o backend NestJS
    # Importante: não capturar /api/auth/* e /api/admin/analytics/* que são do NextAuth e Next.js
    location ~ ^/api/(lawyer|chat|analytics|billing|payment|uploads|webhook)/ {
        # Remove o prefixo /api antes de enviar para o backend
        rewrite ^/api/(.*)$ /$1 break;
        
        proxy_pass http://backend;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Importante: passa os cookies para o backend
        proxy_set_header Cookie $http_cookie;
        
        # Timeouts
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
    }

    # Rotas administrativas específicas do backend NestJS
    location ~ ^/api/admin/(users|cases|lawyers|moderators)/ {
        # Remove o prefixo /api antes de enviar para o backend
        rewrite ^/api/(.*)$ /$1 break;
        
        proxy_pass http://backend;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Importante: passa os cookies para o backend
        proxy_set_header Cookie $http_cookie;
        
        # Timeouts
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
    }

    # Todas as outras rotas - proxya para o frontend Next.js
    location / {
        proxy_pass http://frontend;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Importante: passa os cookies para o frontend
        proxy_set_header Cookie $http_cookie;
        
        # Para Next.js Hot Reload
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_cache_bypass $http_upgrade;
        
        # Timeouts
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
    }

    # Configuração para arquivos estáticos (se necessário)
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        proxy_pass http://frontend;
        proxy_set_header Host $host;
        expires 1y;
        add_header Cache-Control "public, immutable";
    }

    # Health check
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
}